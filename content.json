{"meta":{"title":"Auwaves","subtitle":"Blog","description":"我的博客","author":"Boringboys","url":"https://www.auwaves.com","root":"/"},"pages":[{"title":"404","text":"","path":"404/index.html","date":"04-02","excerpt":""},{"title":"categories","text":"","path":"categories/index.html","date":"04-02","excerpt":""},{"title":"search","text":"","path":"search/index.html","date":"04-02","excerpt":""},{"title":"message","text":"","path":"message/index.html","date":"04-02","excerpt":""},{"title":"tags","text":"","path":"tags/index.html","date":"04-02","excerpt":""},{"title":"设置自动播放或者允许播放","text":"移动端请忽略！ Chrome浏览器地址栏输入 chrome://settings/content/sound 并转到或依次 “设置”→“隐私设置和安全性”→“网站设置”→“声音” Firefox在地址栏Url前直接设置 或浏览器地址栏输入 about:preferences#privacy 并转到或依次 “选项”→“隐私与安全”→“权限”→“自动播放”","path":"something/index.html","date":"04-02","excerpt":""},{"title":"about","text":"","path":"about/index.html","date":"04-12","excerpt":""}],"posts":[{"title":"广播域和冲突域","text":"广播域简单地说，广播域是一种环境，在该环境中通过线路发送的广播消息，可以被所有该环境中的主机或节点接收。 冲突域冲突域是其中的流量可能与其他流量相冲突的网络。冲突域中所有节点都链接到同一个被交换机和学习型网桥划分的相互连接的中继器集合。 区别在同一个冲突域中的每一个节点都能接收到所有被发送的帧；在同一个广播域中的每一个节点都能接收到任一设备发送的广播帧； 冲突域是基于物理层的，所以一些处在数据链路层的设备能够划分冲突域；广播域是基于数据链路层的，所以广播域只能有像路由器这样的网络层设备来划分。 作者：Boringboys原文链接：https://www.boringboys.top/article/网络篇之广播域和冲突域/版权声明：本文采用BY-NC-SA协议授权，转载请遵守此协议","path":"2019/05/24/网络篇之广播域和冲突域/","date":"05-24","excerpt":"广播域简单地说，广播域是一种环境，在该环境中通过线路发送的广播消息，可以被所有该环境中的主机或节点接收。 冲突域冲突域是其中的流量可能与其他流量相冲突的网络。冲突域中所有节点都链接到同一个被交换机和学习型网桥划分的相互连接的中继器集合。","tags":[{"name":"广播域","slug":"广播域","permalink":"https://www.auwaves.com/tags/%E5%B9%BF%E6%92%AD%E5%9F%9F/"},{"name":"冲突域","slug":"冲突域","permalink":"https://www.auwaves.com/tags/%E5%86%B2%E7%AA%81%E5%9F%9F/"},{"name":"网络","slug":"网络","permalink":"https://www.auwaves.com/tags/%E7%BD%91%E7%BB%9C/"}],"preview":"https://boringboys-1254394685.cos.ap-shanghai.myqcloud.com/gal/preview/preview1.jpg"},{"title":"正则表达式","text":"正则表达式，又称规则表达式。（英语：Regular Expression，代码中简写为regex、regexp或RE），计算机科学的一个概念。正则表达式通常被用来检索、替换那些符合某个模式(规则)的文本。 正则表达式由一些普通字符和一些元字符（metacharacters）组成。普通字符包括大小写的字母和数字，而元字符则具有特殊的含义。 下表列出了所有的元字符和对它们的描述。 字符描述 \\将下一个字符标记为特殊字符、或一个原义字符、或一个向后引用、或一个八进制转义符。 ^匹配输入字符串的开始位置。 $匹配输入字符串的结束位置。 *匹配前面的子表达式零次或多次。 +匹配前面的子表达式一次或多次。 ?匹配前面的子表达式零次或一次。 {n}n 是一个非负整数。匹配确定的 n 次。 {n,}n 是一个非负整数。至少匹配n 次。 {n,m}m和n均为非负整数，其中n","path":"2019/05/09/正则表达式/","date":"05-09","excerpt":"正则表达式，又称规则表达式。（英语：Regular Expression，代码中简写为regex、regexp或RE），计算机科学的一个概念。正则表达式通常被用来检索、替换那些符合某个模式(规则)的文本。 正则表达式由一些普通字符和一些元字符（metacharacters）组成。普通字符包括大小写的字母和数字，而元字符则具有特殊的含义。","tags":[{"name":"正则匹配","slug":"正则匹配","permalink":"https://www.auwaves.com/tags/%E6%AD%A3%E5%88%99%E5%8C%B9%E9%85%8D/"},{"name":"正则表达式","slug":"正则表达式","permalink":"https://www.auwaves.com/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"}],"preview":"https://boringboys-1254394685.cos.ap-shanghai.myqcloud.com/gal/preview/preview4.jpg"},{"title":"Nessus在Windows上的安装","text":"NessusNessus 是目前全世界最多人使用的系统漏洞扫描与分析软件。总共有超过75,000个机构使用Nessus 作为扫描该机构电脑系统的软件。该工具提供完整的电脑漏洞扫描服务，并及时更新其漏洞数据库。 Nessus不同于传统的漏洞扫描工具，它可以同时在本机或远端上遥控，进行系统的漏洞分析扫描。 获取安装包Nessus的下载地址:https://www.tenable.com/downloads/nessus点击此链接在浏览器打开如下所示的界面： 然后选择要下载的版本，这里我选择的是Nessus-8.3.1-x64.msi，即Windows版的安装包； 获取激活码在使用Nessus之前，必须先激活服务才可以使用，激活服务的激活码可以在官网获取； （1）首先在刚才的下载界面，可以看到一个“Get Activation Code”按钮，如下图所示，点击它即可前往获取激活码； （2）然后会让你选择获取哪种激活码，如下图所示： 一种是Professional版的，即专业版，需要付费获得激活码； 另外一种是Home版的，即免费版；这里我选择了Home版，点击“Register Now”，前往注册界面； （3）在注册界面填写信息以及邮箱，然后点击“Register”按钮，如下图； （4）当显示如下所示的“Thank You for Registing …”页面时，说明你已经成功获得激活码，激活码以邮件形式发送到了你所填写的邮箱； 安装Nessus（1）点击前面下载的xxx.msi安装包，安装Nessus； 按照安装导向成功安装Nessus后，会自动在浏览器打开一个如下图所示的页面，如果没有可以自己在浏览器输入“https://localhost:8834”打开； 如果输入链接后无法访问，可能是Nessus服务没有运行，前往Nessus的安装目录点击执行“nessus-service.exe”即可，如图双击“nessus-service.exe”启动Nessus服务，双击“Nessus Web Client”可以打开网页版客户端，即“http:localhost:8834”； （2）在打开的“Create an account”页面，输入用户名和密码创建一个账号，以后再次打开此页面使用Nessus时，需要使用这里设置的用户名和密码登录；（3）点击“Continue”后，会出现一个界面让你输入激活码，将前面获得的激活码输入然后继续；（4）然后就是如下图所示的初始化界面了，这一步会下载并安装一些插件，时间会有点久，但没有任何操作，等它完成就可以了； （5）完成之后，显示下面的界面，表示安装成功，你可以创建自己的扫描任务并执行了。 作者：Boringboys原文链接：https://www.boringboys.top/article/Nessus在Windows上的安装/版权声明：本文采用BY-NC-SA协议授权，转载请遵守此协议","path":"2019/04/23/Nessus在Windows上的安装/","date":"04-23","excerpt":"NessusNessus 是目前全世界最多人使用的系统漏洞扫描与分析软件。总共有超过75,000个机构使用Nessus 作为扫描该机构电脑系统的软件。该工具提供完整的电脑漏洞扫描服务，并及时更新其漏洞数据库。","tags":[{"name":"安全","slug":"安全","permalink":"https://www.auwaves.com/tags/%E5%AE%89%E5%85%A8/"},{"name":"工具","slug":"工具","permalink":"https://www.auwaves.com/tags/%E5%B7%A5%E5%85%B7/"}],"preview":"https://boringboys-1254394685.cos.ap-shanghai.myqcloud.com/gal/preview/preview3.jpg"},{"title":"Metasploit命令","text":"概述为了方便自己后期的学习，我把metasploit的帮助信息简单翻译了一下，包括命令和一些用法描述。 核心命令命令 描述 ------- ----------- ? 帮助菜单 banner 在命令行里显示一个好看的metasploit图案（一个很有趣的命令^0^） cd 更改当前工作目录 color 启用或禁用颜色输出 connect 连接到一个主机 exit 退出msfconsole get 获得一个上下文特定变量的值 getg 获得一个全局变量的值 grep 从另一个命令的输出中查找符合条件的行 help 帮助菜单 history 显示历史命令 load 加载框架插件 quit 退出msfconsole（有提示Y/N） repeat 重复一个命令列表 route 通过会话路由流量 save 保存活动数据 sessions 转储会话列表并显示有关会话的信息 set 设置一个上下文特定变量的值 setg 设置一个全局变量的值 sleep 在指定的秒数内不执行任何操作 spool 将控制台输出写入某个文件 threads 查看和操纵后台线程 unload 卸载框架插件 unset 取消设置一个或多个上下文特定变量的值 unsetg 取消设置一个或多个全局变量的值 version 显示框架和控制台库版本号模块命令命令 描述 ------- ----------- advanced 显示一个或多个模块的高级选项 back 从当前上下文后退 info 显示一个或多个模块的信息 loadpath 从路径搜索模块并加载 options 显示一个或多个模块的全局选项 popm 将最新模块弹出堆栈并使其激活 previous 将先前加载的模块设置为当前模块 pushm 将活动模块或模块列表推入模块堆栈 reload_all 从所有定义的模块路径重新加载所有模块 search 搜索模块名称和描述 show 显示给定类型的模块，或者所有模块 use 按名称选择模块作业命令命令 描述 ------- ----------- handler 启动有效负载处理程序作为作业 jobs 显示和管理作业 kill 杀死作业 rename_job 重命名作业资源脚本命令命令 描述 ------- ----------- makerc 将启动之后输入的命令保存到文件中 resource 运行文件中的命令数据库后端命令命令 描述 ------- ----------- analyze 分析有关特定地址或地址范围的数据库信息 db_connect 连接到现有的数据服务 db_disconnect 断开当前数据服务 db_export 导出包含数据库内容的文件 db_import 导入扫描结果文件（将自动检测文件类型） db_nmap 执行nmap并自动记录输出 db_rebuild_cache 重建数据库存储的模块缓存 db_remove 删除保存的数据服务条目 db_save 将当前数据服务连接保存为默认值，以便在启动时重新连接 db_status 显示当前数据服务状态 hosts 列出数据库中的所有主机 loot 列出数据库中的所有Loot(战利品) notes 列出数据库中的所有注释 services 列出数据库中的所有服务 vulns 列出数据库中的所有漏洞 workspace 在数据库工作区之间切换凭证后端命令命令 描述 ------- ----------- creds 列出数据库中的所有证书开发人员命令命令 描述 ------- ----------- edit 使用首选的编辑器编辑当前模块或文件 irb 在当前上下文中打开一个交互式Ruby Shell log 如果可以，将framework.log显示到页面末尾 pry 在当前模块或框架上打开Pry调试器 reload_lib 从指定路径重新加载Ruby库文件msfconsolemsfconsole是Metasploit框架的主要接口。使用者可以通过这个控制台高效的使用MSF中的各种功能。可以在终端或命令行界面直接输入msfconsole启动。 范围和列表上面列出的许多命令和选项都可以使用范围，所以不必手动列出每个需要的事物。所有范围均包括在内。 ID范围带有ID列表的命令可以使用范围来提供帮助。各个ID必须以,分隔（不允许有空格），范围可以用-或..表示。 IP范围这里有多种方法可以用来指定能混合在一起的IP地址范围： 第一种方法是一个IP列表，这些IP仅由&#39; &#39;（ASCII空格）分隔，并带有可选的,。 第二种方式是用两个完整的IP地址表示范围，格式为“开始地址-结束地址”，例如127.0.1.44-127.0.2.33。 也可以使用CIDR规范，但是，与RFC相反，必须将整个地址提供给Metasploit，例如127.0.0.0/8，而不是127/8。 此外，可以将网络掩码与域名一起使用以动态解析要定位的块。 所有这些方法都适用于IPv4和IPv6地址。也可以根据NMAP目标规范用特殊的八位位组范围指定IPv4地址。 示例终止第一个会话： sessions -k 1停止一些正在运行的作业： jobs -k 2-6,7,8,11..15检查一组IP地址： check 127.168.0.0/16, 127.0.0-2.1-4,15 127.0.0.255定位一组IPv6主机： set RHOSTS fe80::3990:0000/110, ::1-::f0f0定位来自解析域名的块： set RHOSTS www.example.test/24 翻译：Boringboys原文链接：http://127.0.0.1:4000/2019/03/29/Metasploit%E5%91%BD%E4%BB%A4/版权声明：本文采用BY-NC-SA协议授权，转载请遵守此协议","path":"2019/03/29/Metasploit命令/","date":"03-29","excerpt":"概述为了方便自己后期的学习，我把metasploit的帮助信息简单翻译了一下，包括命令和一些用法描述。","tags":[{"name":"安全","slug":"安全","permalink":"https://www.auwaves.com/tags/%E5%AE%89%E5%85%A8/"},{"name":"工具","slug":"工具","permalink":"https://www.auwaves.com/tags/%E5%B7%A5%E5%85%B7/"},{"name":"学习","slug":"学习","permalink":"https://www.auwaves.com/tags/%E5%AD%A6%E4%B9%A0/"}],"preview":"https://boringboys-1254394685.cos.ap-shanghai.myqcloud.com/gal/preview/preview2.jpg"},{"title":"密码学 Diffie-Hellman密钥交换协议","text":"概念Diffie-Hellman密钥交换协议（Diffie-Hellman key exchange agreement）简称“D-H协议”，是1976年 Whitfield Diffie 和 Martin Hellman 合作发明的安全协议，它可以让双方在完全没有对方任何预先信息的条件下通过不安全信道创建起一个密钥。这个密钥可以在后续的通信中作为对称密钥来加密通信内容。 算法描述（1）通信双方 Alice 和 Bob 先确定两个大素数 p 和 q ，这两个数不需要保密，因此通信双方可以通过不安全信道协商并确定这两个数； （2）Alice 选择一个大的随机数 r1 并计算：A=q^r1 (mod p)； （3）Alice 将 A 发送给 Bob； （4）Bob 选择另外一个大的随机数 r2 并计算：B=q^r2 (mod p)； （5）Bob 将 B 发送给 Alice； （6）Alice 计算密钥：k1=B^r1 (mod p)； （7）Bob 计算密钥：k2=A^r2 (mod p) ps:最后，Alice 和 Bob 计算得到的 k1=k2，即得到的密钥 举例（1）假设 Alice 和 Bob 选取的 p=11 ， q=5； （2）Alice 选择的随机数取 r1=3，则 A=5^3 (mod 11)=4； （3）Alice 将 A=4 发送给 Bob； （4）Bob 选择的随机数取 r2=6，则 B=5^6 (mod 11)=5； （5）Bob 将 B=5 发送给 Alice； （6）Alice 计算：k1=5^3 (mod 11)=4； （7）Bob 计算：k2=4^6 (mod 11)=4； （8）交换得到的密钥：k1=k2=4 安全性D-H协议的安全性在于，在有限域中计算离散对数远远难于在同一个域中计算指数。 从上面给出的例子解释，就是当 Alice 知道 r1=3，以及 p 和 q 的情况下可以十分容易的计算得到 A；而第三方在只知道 p，q 和 A 的情况下却很难计算得到 Alice 取得随机数 r1，所以无法使用 Bob 通过公共信道发送的 B 计算得到密钥 k；对于 Bob 取的随机数 r2，与对 Alice 的分析一样，第三方同样难以通过计算得到，也就难以通过 Alice 发送的 A 计算出密钥。 缺陷D-H协议也存在缺陷，即容易受到中间人攻击 ( Man-in-the-Middle Attack ，简称 “MITM攻击” ) ，就是通过拦截正常的网络通信数据，并进行数据篡改和嗅探，而通信双方却毫不知情。 中间人攻击的过程如下： （1）第一步和上面所说的一样，通信双方 Alice 和 Bob 先确定两个大素数 p 和 q ，这两个数不需要保密，因此通信双方可以通过不安全信道协商并确定这两个数；设 p=11 ，q=5； （2）窥探者 Eve 监听他们两个的会话，并得到了 p 和 q 的值； （3）Alice、Bob、Eve 同时选择随机数：设 Alice 选择的还是 r1=3 ，Bob 选择的是 r2=6，Eve 选择两个随机数 r1&#39;=8，r2&#39;=9； （4）Alice、Bob、Eve 分别计算 q^r (mod p)：Alice 计算得 A=4 ，Bob 计算得 B=5 ，Eve 计算得 A&#39;=13,B&#39;=12 （5）然后按照协议 Alice 将自己计算的 A 发送给 Bob，此时 Eve 截获这个 A，并将自己计算得到的 A&#39; 发送给 Bob，Bob 对此过程并不知情； （6）同样 Eve 也截获了 Bob 发送给 Alice 的 B，并将 B&#39; 发送给 Alice，Alice 同样对此过程毫不知情； （7）此时 Eve 可以根据截获的 A 、B 分别计算出 自己和 Alice 通信的密钥 以及 自己和Bob通信的密钥，分别与 Alice 、Bob 共享不同的密钥。 这样一来，Eve 就可以分别与 Alice 和 Bob 通信，而 Alice 和 Bob 仍认为和自己通信的是对方，对第三方并不知情。 作者：Boringboys原文链接：https://www.boringboys.top/article/密码学Diffie-Hellman密钥交换协议版权声明：本文采用BY-NC-SA协议授权，转载请遵守此协议","path":"2018/12/04/密码学Diffie-Hellman密钥交换协议/","date":"12-04","excerpt":"概念Diffie-Hellman密钥交换协议（Diffie-Hellman key exchange agreement）简称“D-H协议”，是1976年 Whitfield Diffie 和 Martin Hellman 合作发明的安全协议，它可以让双方在完全没有对方任何预先信息的条件下通过不安全信道创建起一个密钥。这个密钥可以在后续的通信中作为对称密钥来加密通信内容。","tags":[{"name":"安全","slug":"安全","permalink":"https://www.auwaves.com/tags/%E5%AE%89%E5%85%A8/"},{"name":"学习","slug":"学习","permalink":"https://www.auwaves.com/tags/%E5%AD%A6%E4%B9%A0/"}],"preview":"https://boringboys-1254394685.cos.ap-shanghai.myqcloud.com/gal/preview/preview1.jpg"}],"categories":[],"tags":[{"name":"广播域","slug":"广播域","permalink":"https://www.auwaves.com/tags/%E5%B9%BF%E6%92%AD%E5%9F%9F/"},{"name":"冲突域","slug":"冲突域","permalink":"https://www.auwaves.com/tags/%E5%86%B2%E7%AA%81%E5%9F%9F/"},{"name":"网络","slug":"网络","permalink":"https://www.auwaves.com/tags/%E7%BD%91%E7%BB%9C/"},{"name":"正则匹配","slug":"正则匹配","permalink":"https://www.auwaves.com/tags/%E6%AD%A3%E5%88%99%E5%8C%B9%E9%85%8D/"},{"name":"正则表达式","slug":"正则表达式","permalink":"https://www.auwaves.com/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"},{"name":"安全","slug":"安全","permalink":"https://www.auwaves.com/tags/%E5%AE%89%E5%85%A8/"},{"name":"工具","slug":"工具","permalink":"https://www.auwaves.com/tags/%E5%B7%A5%E5%85%B7/"},{"name":"学习","slug":"学习","permalink":"https://www.auwaves.com/tags/%E5%AD%A6%E4%B9%A0/"}]}